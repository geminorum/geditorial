<?php namespace <%= namespaceAuthor %>\<%= namespaceBase %>\Modules\<%= moduleCamelCase %>;

defined( 'ABSPATH' ) || die( header( 'HTTP/1.0 403 Forbidden' ) );

use <%= namespaceAuthor %>\<%= namespaceBase %>;
use <%= namespaceAuthor %>\<%= namespaceBase %>\Helper;
use <%= namespaceAuthor %>\<%= namespaceBase %>\Core\HTML;

class <%= moduleCamelCase %> extends <%= namespaceBase %>\Module
{

	public static function module()
	{
		return [
			'name'  => '<%= moduleUnderline %>',
			'title' => _x( '<%= moduleTitle %>', 'Modules: <%= moduleTitle %>', '<%= pluginTexdomain %>' ),
			'desc'  => _x( '<%= moduleTagline %>', 'Modules: <%= moduleTitle %>', '<%= pluginTexdomain %>' ),
			'icon'  => '<%= moduleDashicon %>',
		];
	}

	protected function get_global_settings()
	{
		return [
			'_general' => [
				[
					'field'       => 'field',
					'type'        => 'text',
					'title'       => _x( 'Title', 'Setting Title', '<%= moduleTextdomain %>' ),
					'description' => _x( 'Description.', 'Setting Description', '<%= moduleTextdomain %>' ),
				],
			],
			'_supports' => [
				'assign_default_term',
				'comment_status',
				'shortcode_support',
				'thumbnail_support',
				$this->settings_supports_option( 'primary_posttype', TRUE ),
			],
		];
	}

	protected function get_global_constants()
	{
		return [
			'primary_posttype' => '',
			'primary_taxonomy' => '',
			'primary_paired'   => '',
			'primary_subterm'  => '',
		];
	}

	protected function get_global_strings()
	{
		$strings = [
			'noops' => [
				'primary_posttype' => _n_noop( '', '', '<%= moduleTextdomain %>' ),
				'primary_taxonomy' => _n_noop( '', '', '<%= moduleTextdomain %>' ),
			],
		];

		if ( ! is_admin() )
			return $strings;

		return $strings;
	}

	public function after_setup_theme()
	{
		$this->register_posttype_thumbnail( 'primary_posttype' );
	}

	public function init()
	{
		parent::init();

		$this->register_taxonomy( 'primary_taxonomy', [
			'hierarchical'       => TRUE,
			'meta_box_cb'        => NULL,
			'show_admin_column'  => TRUE,
			'show_in_quick_edit' => TRUE,
			'default_term'       => NULL,
		], 'primary_posttype' );

		$this->register_posttype( 'primary_posttype', [
			'primary_taxonomy' => $this->constant( 'primary_taxonomy' ),
		] );
	}
}
